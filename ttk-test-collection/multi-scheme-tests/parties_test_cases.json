{
  "options": {
    "breakOnError": true,
    "transformerName": "none",
    "generateIDType": "ulid"
  },
  "name": "parties_test_cases",
  "test_cases": [
    {
      "id": 1,
      "name": "DRPP-GP-04 Party does not exist in any scheme",
      "meta": {
        "info": "DRPP-GP-04 Party does not exist in any scheme"
      },
      "fileInfo": {
        "path": "parties_test_cases.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Send transfer",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "url": "{$inputs.MULTI_SCHEME_PAYER_SDK_OUTBOUND_URL}",
          "operationPath": "/transfers",
          "path": "/transfers",
          "method": "post",
          "body": {
            "homeTransactionId": "{$inputs.HOME_TRANSACTION_ID}",
            "from": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_PAYER_MSISDN}",
              "displayName": "{$inputs.FROM_DISPLAY_NAME}",
              "firstName": "{$inputs.FROM_FIRST_NAME}",
              "middleName": "{$inputs.FROM_MIDDLE_NAME}",
              "lastName": "{$inputs.FROM_LAST_NAME}",
              "dateOfBirth": "{$inputs.FROM_DOB}",
              "fspId": "{$inputs.MULTI_SCHEME_PAYER_FSP_ID}"
            },
            "to": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_MSISDN_DOES_NOT_EXIST_ANY_SCHEME}",
              "merchantClassificationCode": 123
            },
            "amountType": "SEND",
            "currency": "{$inputs.MULTI_SCHEME_PAYER_CURRENCY}",
            "amount": "{$inputs.MULTI_SCHEME_PAYER_AMOUNT}",
            "transactionType": "TRANSFER",
            "note": "{$inputs.NOTE}",
            "skipPartyLookup": false
          },
          "params": {
            "Type": "",
            "ID": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Error Code should be 3200",
                "exec": [
                  "expect(response.body.transferState.getPartiesResponse.body.errorInformation.errorCode).to.equal('3200')"
                ]
              },
              {
                "id": 2,
                "description": "Error description should be Party Not Found",
                "exec": [
                  "expect(response.body.transferState.getPartiesResponse.body.errorInformation.errorDescription).to.equal('Identifier Error')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2,
      "name": "DRPP-GP-05 Party exists in multiple schemes under different currencies",
      "meta": {
        "info": "DRPP-GP-05 Party exists in multiple schemes under different currencies"
      },
      "fileInfo": {
        "path": "parties_test_cases.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Send transfer",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "url": "{$inputs.MULTI_SCHEME_PAYER_SDK_OUTBOUND_URL}",
          "operationPath": "/transfers",
          "path": "/transfers",
          "method": "post",
          "body": {
            "homeTransactionId": "{$inputs.HOME_TRANSACTION_ID}",
            "from": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_PAYER_MSISDN}",
              "displayName": "{$inputs.FROM_DISPLAY_NAME}",
              "firstName": "{$inputs.FROM_FIRST_NAME}",
              "middleName": "{$inputs.FROM_MIDDLE_NAME}",
              "lastName": "{$inputs.FROM_LAST_NAME}",
              "dateOfBirth": "{$inputs.FROM_DOB}",
              "fspId": "{$inputs.MULTI_SCHEME_PAYER_FSP_ID}"
            },
            "to": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_MSISDN_MULTIPLE_SCHEMES_MULTIPLE_CURRENCIES}",
              "merchantClassificationCode": 123
            },
            "amountType": "SEND",
            "currency": "{$inputs.MULTI_SCHEME_PAYER_CURRENCY}",
            "amount": "{$inputs.MULTI_SCHEME_PAYER_AMOUNT}",
            "transactionType": "TRANSFER",
            "note": "{$inputs.NOTE}",
            "skipPartyLookup": false
          },
          "params": {
            "Type": "",
            "ID": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "Multiple Party currencies should be returned",
                "exec": [
                  "expect(response.body.getPartiesResponse.body.party.supportedCurrencies[0]).to.equal('MWK')",
                  "expect(response.body.getPartiesResponse.body.party.supportedCurrencies[0]).to.equal('EGT')"
                ]
              }
            ]
          },
          "disabled": true
        }
      ]
    },
    {
      "id": 3,
      "name": "DRPP-GP-06 Party moves from one DFSP to another DFSP in a single scheme",
      "meta": {
        "info": "DRPP-GP-06 Party moves from one DFSP to another DFSP in a single scheme"
      },
      "fileInfo": {
        "path": "parties_test_cases.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Add a party for DFSP1",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "operationPath": "/accounts",
          "path": "/accounts",
          "method": "post",
          "body": [
            {
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}"
            }
          ],
          "url": "{$inputs.MULTI_SCHEME_PAYEE1_SDK_OUTBOUND_URL}"
        },
        {
          "id": 2,
          "description": "Send transfer",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "url": "{$inputs.MULTI_SCHEME_PAYER_SDK_OUTBOUND_URL}",
          "operationPath": "/transfers",
          "path": "/transfers",
          "method": "post",
          "body": {
            "homeTransactionId": "{$inputs.HOME_TRANSACTION_ID}",
            "from": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_PAYER_MSISDN}",
              "displayName": "{$inputs.FROM_DISPLAY_NAME}",
              "firstName": "{$inputs.FROM_FIRST_NAME}",
              "middleName": "{$inputs.FROM_MIDDLE_NAME}",
              "lastName": "{$inputs.FROM_LAST_NAME}",
              "dateOfBirth": "{$inputs.FROM_DOB}",
              "fspId": "{$inputs.MULTI_SCHEME_PAYER_FSP_ID}"
            },
            "to": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}",
              "merchantClassificationCode": 123
            },
            "amountType": "SEND",
            "currency": "{$inputs.MULTI_SCHEME_PAYER_CURRENCY}",
            "amount": "{$inputs.MULTI_SCHEME_PAYER_AMOUNT}",
            "transactionType": "TRANSFER",
            "note": "{$inputs.NOTE}",
            "skipPartyLookup": false
          },
          "params": {
            "Type": "",
            "ID": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "Destination FSP Id should be test-mwk-dfsp",
                "exec": [
                  "expect(response.body.getPartiesResponse.body.party.partyIdInfo.fspId).to.equal('test-mwk-dfsp')"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "description": "Delete Party from DFSP1",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "operationPath": "/accounts/{idType}/{idValue}",
          "path": "/accounts/MSISDN/{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}",
          "method": "delete",
          "params": {
            "idType": "MSISDN",
            "idValue": "{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}"
          },
          "url": "{$inputs.MULTI_SCHEME_PAYEE1_SDK_OUTBOUND_URL}"
        },
        {
          "id": 4,
          "description": "Add a party for DFSP2",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "operationPath": "/accounts",
          "path": "/accounts",
          "method": "post",
          "body": [
            {
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}"
            }
          ],
          "url": "{$inputs.MULTI_SCHEME_PAYEE2_SDK_OUTBOUND_URL}"
        },
        {
          "id": 5,
          "description": "Send transfer",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "url": "{$inputs.MULTI_SCHEME_PAYER_SDK_OUTBOUND_URL}",
          "operationPath": "/transfers",
          "path": "/transfers",
          "method": "post",
          "body": {
            "homeTransactionId": "{$inputs.HOME_TRANSACTION_ID}",
            "from": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_PAYER_MSISDN}",
              "displayName": "{$inputs.FROM_DISPLAY_NAME}",
              "firstName": "{$inputs.FROM_FIRST_NAME}",
              "middleName": "{$inputs.FROM_MIDDLE_NAME}",
              "lastName": "{$inputs.FROM_LAST_NAME}",
              "dateOfBirth": "{$inputs.FROM_DOB}",
              "fspId": "{$inputs.MULTI_SCHEME_PAYER_FSP_ID}"
            },
            "to": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}",
              "merchantClassificationCode": 123
            },
            "amountType": "SEND",
            "currency": "{$inputs.MULTI_SCHEME_PAYER_CURRENCY}",
            "amount": "{$inputs.MULTI_SCHEME_PAYER_AMOUNT}",
            "transactionType": "TRANSFER",
            "note": "{$inputs.NOTE}",
            "skipPartyLookup": false
          },
          "params": {
            "Type": "",
            "ID": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "Destination FSP Id should be {$inputs.MULTI_SCHEME_PAYER_FSP_ID2}",
                "exec": [
                  "expect(response.body.getPartiesResponse.body.party.partyIdInfo.fspId).to.equal({$inputs.MULTI_SCHEME_PAYER_FSP_ID2})"
                ]
              }
            ]
          }
        },
        {
          "id": 6,
          "description": "Delete Party from DFSP2",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "operationPath": "/accounts/{idType}/{idValue}",
          "path": "/accounts/MSISDN/{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}",
          "method": "delete",
          "params": {
            "idType": "MSISDN",
            "idValue": "{$inputs.MULTI_SCHEME_MSISDN_WITHIN_SCHEME_DFSP_MIGRATION}"
          },
          "url": "{$inputs.MULTI_SCHEME_PAYEE2_SDK_OUTBOUND_URL}"
        }
      ]
    },
    {
      "id": 5,
      "name": "DRPP-GP-08 The DFSP that has the Party throws processing error while the other DFSPs return Party Not Found error.",
      "meta": {
        "info": "DRPP-GP-08 The DFSP that has the Party throws processing error while the other DFSPs return Party Not Found error."
      },
      "fileInfo": {
        "path": "parties_test_cases.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Send transfer",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": true
          },
          "url": "{$inputs.MULTI_SCHEME_PAYER_SDK_OUTBOUND_URL}",
          "operationPath": "/transfers",
          "path": "/transfers",
          "method": "post",
          "body": {
            "homeTransactionId": "{$inputs.HOME_TRANSACTION_ID}",
            "from": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_PAYER_MSISDN}",
              "displayName": "{$inputs.FROM_DISPLAY_NAME}",
              "firstName": "{$inputs.FROM_FIRST_NAME}",
              "middleName": "{$inputs.FROM_MIDDLE_NAME}",
              "lastName": "{$inputs.FROM_LAST_NAME}",
              "dateOfBirth": "{$inputs.FROM_DOB}",
              "fspId": "{$inputs.MULTI_SCHEME_PAYER_FSP_ID}"
            },
            "to": {
              "type": "CONSUMER",
              "idType": "MSISDN",
              "idValue": "{$inputs.MULTI_SCHEME_MSISDN_DFSP_PROCESSING_ERROR}",
              "merchantClassificationCode": 123
            },
            "amountType": "SEND",
            "currency": "{$inputs.MULTI_SCHEME_PAYER_CURRENCY}",
            "amount": "{$inputs.MULTI_SCHEME_PAYER_AMOUNT}",
            "transactionType": "TRANSFER",
            "note": "{$inputs.NOTE}",
            "skipPartyLookup": false
          },
          "params": {
            "Type": "",
            "ID": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Error Code should be 4200",
                "exec": [
                  "expect(response.body.transferState.lastError.mojaloopError.errorInformation.errorCode).to.equal('4200')"
                ]
              },
              {
                "id": 2,
                "description": "Error description should be Party Processing Error",
                "exec": [
                  "expect(response.body.transferState.lastError.mojaloopError.errorInformation.errorDescription).to.equal('Party Processing Error')"
                ]
              }
            ]
          },
          "disabled": true
        }
      ]
    }
  ]
}