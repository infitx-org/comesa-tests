apiVersion: batch/v1
kind: Job
metadata:
  name: comesa-tests-job
  namespace: ${app.namespace}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: comesa-tests-job
        job-name: comesa-tests-job
        sidecar.istio.io/inject: 'false'
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - nginx
              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: comesa-tests-config-vol
          configMap:
            name: comesa-tests-config
        - name: comesa-tests-ttk-environments-vol
          configMap:
            name: ttk-backend-config-extra-environments
        - name: reports-storage
          persistentVolumeClaim:
            claimName: comesa-test-reports-pvc
      containers:
        - name: comesa-gp
          image: ghcr.io/infitx-org/comesa-tests:latest
          command:
            - /bin/sh
            - '-c'
          args:
            - |
              until nslookup ttk-backend.${app.namespace}.svc.cluster.local; do sleep 5; done;
              chmod -R 777 /opt/app;  # Set permissions for the directory
              TOTAL_EXIT_CODE=0;
              %{ for scheme_name, scheme in app.testConfig.multiSchemeConfig }
              %{ if app.testConfig.dfspConfig[scheme.dfsp].enabled }
              %{ for target in scheme.targets }
              %{ if app.testConfig.dfspConfig[target.dfsp].enabled }

              export SCHEME_DFSP_SANITIZED="$(echo ${scheme.dfsp} | sed 's/-/_/g')"
              export TARGET_DFSP_SANITIZED="$(echo ${target.dfsp} | sed 's/-/_/g')"
              npx ml-ttk-cli \
                -e ttk-environments/multi_scheme_${scheme.dfsp}_to_${target.dfsp}.json \
                -i ttk-test-collection \
                -u http://ttk-backend:5050 \
                --report-format json \
                --save-report true \
                --report-target file://reports/${scheme.dfsp}_to_${target.dfsp}_report.json \
                --save-report-base-url https://ttkfront-${app.namespace}.${cluster.env}.${cluster.domain};
              export $(echo EXIT_CODE_$${SCHEME_DFSP_SANITIZED}_to_$${TARGET_DFSP_SANITIZED})=$?
              echo "Test ${scheme.dfsp} to ${target.dfsp} finished with exit code: $(echo EXIT_CODE_$${SCHEME_DFSP_SANITIZED}_to_$${TARGET_DFSP_SANITIZED})"
              TOTAL_EXIT_CODE=$((TOTAL_EXIT_CODE || $(echo EXIT_CODE_$${SCHEME_DFSP_SANITIZED}_to_$${TARGET_DFSP_SANITIZED})));
              %{ endif }
              %{ endfor }
              %{ endif }
              %{ endfor }
              exit $TOTAL_EXIT_CODE;
          volumeMounts:
            - name: comesa-tests-config-vol
              mountPath: /opt/app/config
            - name: comesa-tests-ttk-environments-vol
              mountPath: /opt/app/ttk-environments
            - name: reports-storage
              mountPath: /opt/app/reports
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
